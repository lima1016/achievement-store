<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lima.web.member.dao.MemberDao">

    <resultMap type="Member" id="MemberMap">
        <id column="member_no" property="memberNo"/>
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="email" property="email"/>
        <result column="password" property="password"/>
        <result column="ham" property="ham"/>
        <result column="profile_img" property="profileImg"/>
    </resultMap>

    <resultMap type="Deposit" id="DepositMap">
        <id column="member_no" property="memberNo"/>
        <result column="ham" property="ham"/>
        <result column="deposit_date" property="depositDate"/>
    </resultMap>

    <resultMap type="Withdraw" id="WithdrawMap">
        <id column="member_no" property="memberNo"/>
        <result column="ham" property="ham"/>
        <result column="withdraw_date" property="withdrawDate"/>
    </resultMap>

    <resultMap type="Member" id="MemberHamMap">
        <id column="member_no" property="memberNo"/>
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="email" property="email"/>
        <result column="password" property="password"/>
        <result column="profile_img" property="profileImg"/>

        <collection property="deposit" ofType="Deposit">
            <id column="member_no" property="memberNo"/>
            <result column="ham" property="ham"/>
            <result column="deposit_date" property="depositDate"/>
        </collection>

        <collection property="withdraw" ofType="Withdraw">
            <id column="member_no" property="memberNo"/>
            <result column="ham" property="ham"/>
            <result column="withdraw_date" property="withdrawDate"/>
        </collection>
    </resultMap>

    <insert id="insertDeposit" parameterType="Deposit">
        insert into deposit
        (
        member_no
        , ham
        , deposit_date
        )
        value
        (
        #{memberNo}
        , #{ham}
        , now()
        )
    </insert>

    <insert id="insertWithdraw" parameterType="Withdraw">
        insert into withdraw
        (
        member_no
        , ham
        , withdraw_date
        )
        value
        (
        #{memberNo}
        , #{ham}
        , now()
        )
    </insert>

    <select id="findAllHamHistory" parameterType="int" resultMap="MemberHamMap">
        select
        m.member_no
        , m.ham
        , d.member_no
        , d.ham
        , d.deposit_date
        , w.member_no
        , w.ham
        , w.withdraw_date
        from member m
        left join deposit d on m.member_no = d.member_no
        left join withdraw w on m.member_no = w.member_no
        where m.member_no = #{memberNo}
        order by d.deposit_date DESC, w.withdraw_date DESC
    </select>
    <select id="findAll" resultMap="MemberMap">
        select * from member
    </select>

    <insert id="insert" parameterType="Member">
        insert into member
        (
        name
        , id
        , password
        , email
        , ham
        )
        value
        (
        #{name}
        , #{id}
        , password(#{password})
        , #{email}
        , 10000
        )
    </insert>

    <select id="findByUserIdPassword" parameterType="map" resultMap="MemberMap">
        select
        *
        from member
        where id = #{id} and password = password(#{password})
    </select>

    <select id="checkUserId" parameterType="String" resultType="int">
        select
        count(*)
		from member
		where id = #{id}
    </select>

    <select id="checkEmail" parameterType="String" resultType="int">
        select
        count(*)
        from member
        where email = #{email};
    </select>

    <select id="findBy" parameterType="int" resultMap="MemberMap">
        select
        *
        from member
        where member_no = #{memberNo}
    </select>

    <update id="hamUpdate" parameterType="Member">
        update member
        <set>
            <if test="ham != null">ham=#{ham}</if>
        </set>
        where member_no = #{memberNo}
    </update>

    <update id="updateMyInfo" parameterType="Member">
        update member
        <set>
            <if test="name != null">name=#{name}</if>
            , <if test="email != null">email=#{email}</if>
            , <if test="password != ''">password=password(#{password})</if>
            , <if test="profileImg != ''">profile_img=#{profileImg}</if>
        </set>
        where member_no = #{memberNo}
    </update>

    <select id="countMember" resultType="int">
        SELECT COUNT(*) FROM member
    </select>
</mapper>
